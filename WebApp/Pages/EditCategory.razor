@page "/editcategory/{categoryId:int}"

@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject NavigationManager NavigationManager
@inject IAddCategoryUseCase AddCategoryUseCase
@inject IEditCategoryUseCase EditCategoryUseCase

<h3>Edit Category</h3>

@if (category is not null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText class="form-control" id="name" @bind-Value="category.Name"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Description</label>
            <InputText class="form-control" id="description" @bind-Value="category.Description"></InputText>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-danger" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public int categoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        category = new Category();
    }

    protected override void OnParametersSet()
    {
        var cat = GetCategoryByIdUseCase.Execute(categoryId);
        category = new Category()
        {
            CategoryId = cat.CategoryId,
            Name = cat.Name,
            Description = cat.Description
        };
    }

    private void OnValidSubmit()
    {
        EditCategoryUseCase.Execute(category);
        NavigationManager.NavigateTo("/categories");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }
}