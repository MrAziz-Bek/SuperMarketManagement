@page "/transactions"

@inject IGetTransactionsUseCase GetTransactionsUseCase
@inject IJSRuntime JSRuntime

<div class="row">
    <div class="col-2">
        <label for="cashier">Cashier Name</label>
        <input type="text" id="cashier" class="form-control" @bind-value="cashierName" />
    </div>
    <div class="col-3">
        <label for="startdate">Start Date</label>
        <input type="date" id="startdate" class="form-control" @bind-value="startDate" />
    </div>
    <div class="col-3">
        <label for="enddate">End Date</label>
        <input type="date" id="enddate" class="form-control" @bind-value="endDate" />
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="submit" class="btn btn-primary form-control" @onclick="LoadTransactions">Search</button>
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="submit" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
    </div>

</div>
<br />

@if (transactions is not null)
{
    <div id="printarea">
    <table class="table">
        <thead>
            <tr>
                <th>Date Time</th>
                <th>Cashier Name</th>
                <th>Product Name</th>
                <th>Quantity Before</th>
                <th>Quantity Sold</th>
                <th>Quantity After</th>
                <th>Price</th>
                <th>Sold Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in transactions)
                {
                    <tr>
                        <td>@transaction.TimeStamp.ToString("yyyy-MM-dd hh:mm")</td>
                        <td>@transaction.CashierName</td>
                        <td>@transaction.ProductName</td>
                        <td>@transaction.beforeQuantity</td>
                        <td>@transaction.soldQuantity</td>
                        <td>@(transaction.beforeQuantity - transaction.soldQuantity)</td>
                        <td style="text-align: right">@(string.Format("{0:c}", transaction.Price))</td>
                        <td style="text-align: right">@(string.Format("{0:c}", transaction.soldQuantity * transaction.Price))
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="6">&nbsp;</td>
                    <td style="text-align: right"><b>Grand Total:</b></td>
                    <td style="text-align: right"><b>@(string.Format("{0:c}", transactions.Sum(t => t.Price *
                        t.soldQuantity)))</b></td>
                </tr>
            </tfoot>
        </table>
    </div>

}


@code {
    private string cashierName;
    private DateTime startDate;
    private DateTime endDate;

    private IEnumerable<Transaction> transactions;

    protected override void OnInitialized()
    {
        startDate = DateTime.Today;
        endDate = DateTime.Today;
    }

    private void LoadTransactions()
    {
        transactions = GetTransactionsUseCase.Execute(cashierName, startDate, endDate);
    }
    private void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }
}